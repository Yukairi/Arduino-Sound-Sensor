#include <Wire.h>
#include <LiquidCrystal_I2C.h> // Library for LCD
LiquidCrystal_I2C lcd = LiquidCrystal_I2C(0x27, 16, 2);

const int sampleWindow = 50; // Sample window width in mS (50 mS = 20Hz)
unsigned int sample;

#define SENSOR_PIN A0
#define BUZZER_PIN 4
#define PIN_MODERATE 5
#define PIN_LOUD 6

void setup() {
  pinMode(SENSOR_PIN, INPUT); // Set the signal pin as input
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(PIN_MODERATE, OUTPUT);
  pinMode(PIN_LOUD, OUTPUT);

  digitalWrite(BUZZER_PIN, LOW);
  digitalWrite(PIN_MODERATE, LOW);
  digitalWrite(PIN_LOUD, LOW);

  Serial.begin(9600);
  lcd.begin(16, 2);

  // Turn on the backlight.
  lcd.backlight();
  lcd.clear();
}

void loop() {
  unsigned long startMillis = millis(); // Start of sample window
  float peakToPeak = 0;                 // peak-to-peak level

  unsigned int signalMax = 0;  // minimum value
  unsigned int signalMin = 1024; // maximum value

                                // collect data for 50 mS
  while (millis() - startMillis < sampleWindow) {
    sample = analogRead(SENSOR_PIN); // get reading from microphone
    if (sample < 1024) {             // toss out spurious readings
      if (sample > signalMax) {
        signalMax = sample; // save just the max levels
      } else if (sample < signalMin) {
        signalMin = sample; // save just the min levels
      }
    }
  }

  peakToPeak = signalMax - signalMin;        // max - min = peak-peak amplitude
  int db = map(peakToPeak, 20, 900, 49.5, 90); // calibrate for decibels

  lcd.setCursor(0, 0);
  lcd.print("Loudness: ");
  lcd.print(db);
  lcd.print("dB");

  if (db <= 60) {
    lcd.setCursor(0, 1);
    lcd.print("Level: Quiet");
    Serial.println("Level: Low");
    digitalWrite(BUZZER_PIN, LOW);
    digitalWrite(PIN_MODERATE, LOW);
    digitalWrite(PIN_LOUD, LOW);
    delay(1000);
  } else if (db > 60 && db < 85) {
    lcd.setCursor(0, 1);
    lcd.print("Level: Moderate");
    Serial.println("Level: Moderate");
    digitalWrite(BUZZER_PIN, HIGH); // Turn on the buzzer
    digitalWrite(PIN_MODERATE, HIGH);
    digitalWrite(PIN_LOUD, LOW);
    delay(1000);
    digitalWrite(BUZZER_PIN, LOW); // Turn off the buzzer
  } else if (db >= 85) {
    lcd.setCursor(0, 1);
    lcd.print("Level: High");
    Serial.println("Level: High!");
    digitalWrite(BUZZER_PIN, HIGH); // Turn on the buzzer
    digitalWrite(PIN_MODERATE, LOW);
    digitalWrite(PIN_LOUD, HIGH);
    delay(1000);
    digitalWrite(BUZZER_PIN, LOW); // Turn off the buzzer
  }

  lcd.clear();
}
